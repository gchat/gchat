#line 1 "IRC.pm"
"#line 1 \"IRC.pm\"\n"
    "{\n"
    "package IRC;\n"
    "sub IRC::register {\n"
    "my ($script_name, $version, $callback) = @_;\n"
    "my $package = caller;\n"
    "$callback = Xchat::Embed::fix_callback( $package, $callback) if $callback;\n"
    "Xchat::register( $script_name, $version, undef, $callback );\n"
    "}\n"
    "\n"
    "\n"
    "sub IRC::add_command_handler {\n"
    "my ($command, $callback) = @_;\n"
    "my $package = caller;\n"
    "\n"
    "$callback = Xchat::Embed::fix_callback( $package, $callback );\n"
    "\n"
    "\n"
    "\n"
    "my $start_index = $command ? 1 : 0;\n"
    "\n"
    "Xchat::hook_command( $command,\n"
    "sub {\n"
    "no strict 'refs';\n"
    "return &{$callback}($_[1][$start_index]);\n"
    "}\n"
    ");\n"
    "return;\n"
    "}\n"
    "\n"
    "sub IRC::add_message_handler {\n"
    "my ($message, $callback) = @_;\n"
    "my $package = caller;\n"
    "$callback = Xchat::Embed::fix_callback( $package, $callback );\n"
    "\n"
    "Xchat::hook_server( $message,\n"
    "sub {\n"
    "no strict 'refs';\n"
    "return &{$callback}( $_[1][0] );\n"
    "}\n"
    ");\n"
    "return;\n"
    "}\n"
    "\n"
    "sub IRC::add_print_handler {\n"
    "my ($event, $callback) = @_;\n"
    "my $package = caller;\n"
    "$callback = Xchat::Embed::fix_callback( $package, $callback );\n"
    "Xchat::hook_print( $event,\n"
    "sub {\n"
    "my @word = @{$_[0]};\n"
    "no strict 'refs';\n"
    "return &{$callback}( join( ' ', @word[0..3] ), @word );\n"
    "}\n"
    ");\n"
    "return;\n"
    "}\n"
    "\n"
    "sub IRC::add_timeout_handler {\n"
    "my ($timeout, $callback) = @_;\n"
    "my $package = caller;\n"
    "$callback = Xchat::Embed::fix_callback( $package, $callback );\n"
    "Xchat::hook_timer( $timeout,\n"
    "sub {\n"
    "no strict 'refs';\n"
    "&{$callback};\n"
    "return 0;\n"
    "}\n"
    ");\n"
    "return;\n"
    "}\n"
    "\n"
    "sub IRC::command {\n"
    "my $command = shift;\n"
    "if( $command =~ m{^/} ) {\n"
    "$command =~ s{^/}{};\n"
    "Xchat::command( $command );\n"
    "} else {\n"
    "Xchat::command( qq[say $command] );\n"
    "}\n"
    "}\n"
    "\n"
    "sub IRC::command_with_channel {\n"
    "my ($command, $channel, $server) = @_;\n"
    "my $old_ctx = Xchat::get_context;\n"
    "my $ctx = Xchat::find_context( $channel, $server );\n"
    "\n"
    "if( $ctx ) {\n"
    "Xchat::set_context( $ctx );\n"
    "IRC::command( $command );\n"
    "Xchat::set_context( $ctx );\n"
    "}\n"
    "}\n"
    "\n"
    "sub IRC::command_with_server {\n"
    "my ($command, $server) = @_;\n"
    "my $old_ctx = Xchat::get_context;\n"
    "my $ctx = Xchat::find_context( undef, $server );\n"
    "\n"
    "if( $ctx ) {\n"
    "Xchat::set_context( $ctx );\n"
    "IRC::command( $command );\n"
    "Xchat::set_context( $ctx );\n"
    "}\n"
    "}\n"
    "\n"
    "sub IRC::dcc_list {\n"
    "my @dccs;\n"
    "for my $dcc ( Xchat::get_list( 'dcc' ) ) {\n"
    "push @dccs, $dcc->{nick};\n"
    "push @dccs, $dcc->{file} ? $dcc->{file} : '';\n"
    "push @dccs, @{$dcc}{qw(type status cps size)};\n"
    "push @dccs, $dcc->{type} == 0 ? $dcc->{pos} : $dcc->{resume};\n"
    "push @dccs, $dcc->{address32};\n"
    "push @dccs, $dcc->{destfile} ? $dcc->{destfile} : '';\n"
    "}\n"
    "return @dccs;\n"
    "}\n"
    "\n"
    "sub IRC::channel_list {\n"
    "my @channels;\n"
    "for my $channel ( Xchat::get_list( 'channels' ) ) {\n"
    "push @channels, @{$channel}{qw(channel server)},\n"
    "Xchat::context_info( $channel->{context} )->{nick};\n"
    "}\n"
    "return @channels;\n"
    "}\n"
    "\n"
    "sub IRC::get_info {\n"
    "my $id = shift;\n"
    "my @ids = qw(version nick channel server xchatdir away network host topic);\n"
    "\n"
    "if( $id >= 0 && $id <= 8 && $id != 5 ) {\n"
    "my $info = Xchat::get_info($ids[$id]);\n"
    "return defined $info ? $info : '';\n"
    "} else {\n"
    "if( $id == 5 ) {\n"
    "return Xchat::get_info( 'away' ) ? 1 : 0;\n"
    "} else {\n"
    "return 'Error2';\n"
    "}\n"
    "}\n"
    "}\n"
    "\n"
    "sub IRC::get_prefs {\n"
    "return 'Unknown variable' unless defined $_[0];\n"
    "my $result = Xchat::get_prefs(shift);\n"
    "return defined $result ? $result : 'Unknown variable';\n"
    "}\n"
    "\n"
    "sub IRC::ignore_list {\n"
    "my @ignores;\n"
    "for my $ignore ( Xchat::get_list( 'ignore' ) ) {\n"
    "push @ignores, $ignore->{mask};\n"
    "my $flags = $ignore->{flags};\n"
    "push @ignores, $flags & 1, $flags & 2, $flags & 4, $flags & 8, $flags & 16,\n"
    "$flags & 32, ':';\n"
    "}\n"
    "return @ignores;\n"
    "}\n"
    "\n"
    "sub IRC::print {\n"
    "Xchat::print( $_ ) for @_;\n"
    "return;\n"
    "}\n"
    "\n"
    "sub IRC::print_with_channel {\n"
    "Xchat::print( @_ );\n"
    "}\n"
    "\n"
    "sub IRC::send_raw {\n"
    "Xchat::commandf( qq[quote %s], shift );\n"
    "}\n"
    "\n"
    "sub IRC::server_list {\n"
    "my @servers;\n"
    "for my $channel ( Xchat::get_list( 'channels' ) ) {\n"
    "push @servers, $channel->{server} if $channel->{server};\n"
    "}\n"
    "return @servers;\n"
    "}\n"
    "\n"
    "sub IRC::user_info {\n"
    "my $user;\n"
    "if( @_ > 0 ) {\n"
    "$user = Xchat::user_info( shift );\n"
    "} else {\n"
    "$user = Xchat::user_info();\n"
    "}\n"
    "\n"
    "my @info;\n"
    "if( $user ) {\n"
    "push @info, $user->{nick};\n"
    "if( $user->{host} ) {\n"
    "push @info, $user->{host};\n"
    "} else {\n"
    "push @info, 'FETCHING';\n"
    "}\n"
    "push @info, $user->{prefix} eq '@' ? 1 : 0;\n"
    "push @info, $user->{prefix} eq '+' ? 1 : 0;\n"
    "}\n"
    "return @info;\n"
    "}\n"
    "\n"
    "sub IRC::user_list {\n"
    "my ($channel, $server) = @_;\n"
    "my $ctx = Xchat::find_context( $channel, $server );\n"
    "my $old_ctx = Xchat::get_context;\n"
    "\n"
    "if( $ctx ) {\n"
    "Xchat::set_context( $ctx );\n"
    "my @users;\n"
    "for my $user ( Xchat::get_list( 'users' ) ) {\n"
    "push @users, $user->{nick};\n"
    "if( $user->{host} ) {\n"
    "push @users, $user->{host};\n"
    "} else {\n"
    "push @users, 'FETCHING';\n"
    "}\n"
    "push @users, $user->{prefix} eq '@' ? 1 : 0;\n"
    "push @users, $user->{prefix} eq '+' ? 1 : 0;\n"
    "push @users, ':';\n"
    "}\n"
    "Xchat::set_context( $old_ctx );\n"
    "return @users;\n"
    "} else {\n"
    "return;\n"
    "}\n"
    "}\n"
    "\n"
    "sub IRC::user_list_short {\n"
    "my ($channel, $server) = @_;\n"
    "my $ctx = Xchat::find_context( $channel, $server );\n"
    "my $old_ctx = Xchat::get_context;\n"
    "\n"
    "if( $ctx ) {\n"
    "Xchat::set_context( $ctx );\n"
    "my @users;\n"
    "for my $user ( Xchat::get_list( 'users' ) ) {\n"
    "my $nick = $user->{nick};\n"
    "my $host = $user->{host} || 'FETCHING';\n"
    "push @users, $nick, $host;\n"
    "}\n"
    "Xchat::set_context( $old_ctx );\n"
    "return @users;\n"
    "} else {\n"
    "return;\n"
    "}\n"
    "\n"
    "}\n"
    "\n"
    "sub IRC::add_user_list {}\n"
    "sub IRC::sub_user_list {}\n"
    "sub IRC::clear_user_list {}\n"
    "sub IRC::notify_list {}\n" "sub IRC::perl_script_list {}\n" "}\n"
